# docker-compose.yml
version: '2.2'
services:
  nginx:
    image: valian/docker-nginx-auto-ssl
    restart: on-failure
    ports:
      - 80:80
      - 443:443
    volumes:
      - ssl_data:/etc/resty-auto-ssl
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
    environment:
      ALLOWED_DOMAINS: 'aoe2companion.com'
      SITES: 'mgz.aoe2companion.com=mgz:80;api.aoe2companion.com=api:80;function.aoe2companion.com=function:80;'
      ALL_SITES: >
        notify.aoe2companion.com=notify:80;
        replay.aoe2companion.com=replay:80;
        graphql.aoe2companion.com=graphql:80;
        import.aoe2companion.com=import:80;
        rank.aoe2companion.com=rank:80;
        ingest-fast.aoe2companion.com=ingest-fast:80;
        ingest.aoe2companion.com=ingest:80;
        status.aoe2companion.com=status:80;
        metric.aoe2companion.com=metric:80;
        proxy.aoe2companion.com=proxy:80;

  mgz:
    image: denniske/aoe2companion-mgz-pypy:d31fd9041fc2b9230d1a1223ba28bd6c2bd17ff5
    restart: on-failure
    mem_limit: 2000m
    cpus: "6.0"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
    environment:
      PORT: 80

#  api:
#    image: denniske/aoe2companion-api:abcd
#    environment:
#      SERVICE_NAME: 'api'
#    extends:
#      service:
#        base

  base:
    image: node
    restart: on-failure
    mem_limit: 500m
    cpus: "1.0"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
    environment:
      ENVIRONMENT: production
      PORT: 80
      DATABASE_URL: $DATABASE_URL
      ELECTROLYTIC_APP_SECRET: $ELECTROLYTIC_APP_SECRET
      PUSHER_SECRET_KEY: $PUSHER_SECRET_KEY
      S3_ACCESS_KEY_ID: $S3_ACCESS_KEY_ID
      S3_SECRET_ACCESS_KEY: $S3_SECRET_ACCESS_KEY
      TWITCH_CLIENT_ID: $TWITCH_CLIENT_ID
      TWITCH_CLIENT_SECRET: $TWITCH_CLIENT_SECRET

volumes:
  ssl_data:
